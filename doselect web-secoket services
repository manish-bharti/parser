change content of .env file to 

# service definition

NODE_ENV=local # development | production

SERVICE_NAME=do-websocket

SERVICE_PORT=7000

SERVICE_HEALTH_CHECK_ENDPOINT=/health

PAYLOAD_SIZE_IN_MB=2MB



#logger config

# supported values: debug | info | error

LOG_LEVEL=debug

LOG_DIRECTORY=/home/khushbooshaw/infoedge/workspace/do-websocket-service

LOG_FILE_PREFIX=logs

LOG_STDOUT=true # set true to see log on console



# meta logger config

META_LOG_DIRECTORY=/home/khushbooshaw/infoedge/workspace/do-websocket-service

META_LOG_FILE_PREFIX=meta

META_LOG_STDOUT=true # set true to see log on console



SILENT=false #



# ws redis settings

SOCKET_META_REDIS_HOST=localhost

SOCKET_META_REDIS_PORT=6380



# redis adapter for socket

SOCKET_ADAPTER_REDIS_HOST=localhost

SOCKET_ADAPTER_REDIS_PORT=6379

SOCKET_ADAPTER_REDIS_PREFIX_KEY=SOCK_REDIS



# redis adapter for socket admin

AMDIN_ADAPTER_REDIS_HOST=localhost

AMDIN_ADAPTER_REDIS_PORT=6381



# rabbitmq settings

AMQP_URL=localhost

AMQP_PORT=5672

AMQP_RECONNECT_TIMEOUT=3000

AMQP_USER=guest

AMQP_PASSWORD=guest

AMQP_VHOST=hedwig



# mongodb settings

MONGO_URL=localhost

MONGO_PORT=27017

MONGO_USER=central

MONGO_PASSWORD=central

MONGO_AUTH_DB=proctor_db



#dependent service DNS

EMBED_DOMAIN=http://localhost:8080

NIMBUS_DOMAIN=http://localhost:7000

CENTRAL_DOMAIN=http://localhost:8000



# CORS settings

ALLOWED_FQDNS=["http://localhost:8000","http://localhost:3001"]



# fully qualified DNS

DOSELECT_FQDNS=["http://localhost:8000","http://localhost:3001"]

WHITE_LABEL_FQDNS=["http://localhost:3000"]



# google cloud settings

GCLOUD_PROCTOR_PROJECT_ID="image-proctor"

GCLOUD_PROCTOR_BUCKET_NAME="image-proctor"

GCLOUD_PROCTOR_KEYFILE_PATH="secret_gcp_cred.json"



#testing user key

USER_1=OKQ96eS1YQCTVT5jxrMX

USER_2=OKQ96eS1YQCTVT5jxrMX

USER_3=6eS1YQCTCTVT5jxrMXAB



# JWT secret to decode tokens generated by central service

CENTRAL_JWT_SECRET=do



# Admin username nad password for socket admin

ADMIN_USERNAME=do_admin

ADMIN_PASSWORD=$2a$10$NmMlAoE1WlSuUlQ8vv93m.HaAIvZ3YtADnRwAioCRbIOcGiqzPAqK



SENTRY_DSN=



# AWS settings

AWS_REGION="ap-southeast-1"



# AWS proctor S3 bucket settings

AWS_DO_PROCTOR_BUCKET_NAME="do-proctor-dev"

AWS_S3_WEBCAM_SNAPSHOT_SIGNED_URL_EXPIRY_IN_SECONDS=3600



# AWS proctor-events SQS settings

AWS_DO_PROCTOR_EVENT_SQS_URL="https://sqs.ap-southeast-1.amazonaws.com/<>/<proctor_event_sqs_queue_name>"

AWS_DO_PROCTOR_EVENT_SQS_NAME="<proctor_event_sqs_queue_name>"

AWS_PROCTOR_EVENTS_SQS_DELAY_IN_SECONDS=0



# AWS proctor-analysls SQS settings

AWS_DO_PROCTOR_ANALYSIS_SQS_URL="https://sqs.ap-southeast-1.amazonaws.com/<>/<proctor_post_analysis_sqs_queue_name>"

AWS_DO_PROCTOR_ANALYSIS_SQS_NAME="<proctor_post_analysis_sqs_queue_name>"

AWS_PROCTOR_ANALYSIS_SQS_DELAY_IN_SECONDS=60



# Proctor redis

PROCTOR_REDIS_HOST="localhost"

PROCTOR_REDIS_PORT="6379"

PROCTOR_REDIS_DB=5



# JWT secret to decode tokens generated by central service

CENTRAL_JWT_SECRET="H1&Nwy06q9E$8iz5bgpnjR*qtU%BX2#u1XZCgJk3!9GV0l2bGQ"



change int this function _getAMQPConnString
const url = `amqp://${amqpUser}:${amqpPassword}@${amqpUrl}:${amqpPort}`;


Add * localhost:3000 * all places where * localhost:3001 * is present

